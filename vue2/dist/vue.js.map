{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/globalApi.js","../src/compiler/parse.js","../src/compiler/index.js","../src/observe/dep.js","../src/observe/watcher.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["\r\n// 静态方法\r\nconst strats = {}\r\nconst LIFECYCLE = [\r\n  'beforeCreate',\r\n  'created'\r\n]\r\nLIFECYCLE.forEach(hook => {\r\n  strats[hook] = function (p, c) {\r\n    if (c) { //如果儿子有 父亲有  让父亲和儿子拼在一起\r\n      if (p) {\r\n        return p.concat(c)\r\n      } else {\r\n        return [c]; // 儿子有父亲没有 ，则将儿子包装成数组\r\n      }\r\n    } else {\r\n      return p; // 如果儿子没有则用父亲即可\r\n    }\r\n  }\r\n})\r\nstrats.components = function(parentVal, childVal) {\r\n  const res = Object.create(parentVal);\r\n\r\n  if(childVal) {\r\n    for(let key in childVal) {\r\n      res[key] = childVal[key]; //返回的是构造的对象，可以拿到父亲原型上的属性，并且将儿子的都拷贝到自己身上\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\nexport function mergeOptions(parent, child) {\r\n  const options = {}\r\n\r\n  for (let key in parent) {\r\n    mergeField(key)\r\n  }\r\n  for (let key in child) {\r\n    if (!parent.hasOwnProperty(key)) {\r\n      mergeField(key)\r\n    }\r\n  }\r\n\r\n  function mergeField(key) {\r\n    // 采用策略模式 减少if/else\r\n    if (strats[key]) {\r\n      options[key] = strats[key](parent[key], child[key])\r\n    } else {\r\n      // 不在策略中则以儿子为主\r\n      options[key] = child[key] || parent[key]\r\n    }\r\n  }\r\n\r\n  return options\r\n}\r\n","import { mergeOptions } from \"./utils\"\r\n\r\n\r\nexport function initGlobalAPI(Vue) {\r\n  Vue.options = {}\r\n  \r\n  Vue.mixin = function (mixin) {\r\n    // 将用户选项和全局options进行合并\r\n    this.options = mergeOptions(this.options, mixin);\r\n    return this\r\n  }\r\n\r\n  // 可以手动创建组件进行挂载\r\n  Vue.extend = function(options) {\r\n    function Sub() { // 最终使用一个组件，就是new一个实例\r\n      this._init(); //就是默认对子类进行初始化操作\r\n    }\r\n    Sub.prototype = Object.create(Vue.prototype) // sub.prototype.__proto = Vue.prototype\r\n    Sub.prototype.constructor = Sub\r\n    // 希望将用户的传递的参数 和全局的Vue.options来合并\r\n    Sub.options = mergeOptions(Vue.options, options) //保存用户传递的选项\r\n\r\n    return Sub\r\n  }\r\n  Vue.options.components = {}\r\n  Vue.component = function(id, definition) {\r\n    // 如果definition已经是一个函数了 说明用户自己调用了Vue.extend\r\n    definition = typeof definition === 'function' ? definition : Vue.extend(definition)\r\n\r\n    Vue.options.components[id] = definition\r\n    console.log(Vue.options.components);\r\n  }\r\n}\r\n","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 匹配的分组是个标签名 <xxx 匹配到的是开始 标签的名字\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配的是</xxx> 最终匹配到的分组 就是结束标签的名字\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\r\n// 匹配属性 第一个分组是属性的key value就是分组3/分组4/分组5\r\nconst startTagClose = /^\\s*(\\/?)>/; // <div> <br/>\r\nconst defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g; // {{xxx}} 匹配小胡子语法\r\n\r\nexport function parseHTML(html) { // html最开始肯定是一个 <div>hello</div>\r\n\r\n  const ELEMENT_TYPE = 1;\r\n  const TEXT_TYPE = 3;\r\n  const stack = []; // 用于存放元素\r\n  let currentParent; //指向的是栈中的最后一个\r\n  let root;\r\n  \r\n  function createASTElement(tag, attrs) {\r\n    return {\r\n      tag,\r\n      type: ELEMENT_TYPE,\r\n      children: [],\r\n      attrs,\r\n      parent: null\r\n    }\r\n  }\r\n  // 利用栈型结构来构造一颗树\r\n  function start(tag, attrs) {\r\n    // console.log(111, tag, attrs);\r\n    let node = createASTElement(tag, attrs); //创造一个ast节点\r\n    if(!root) { // 判断是否是空树\r\n      root = node; //如果为空则当前是树的根节点\r\n    }\r\n    if(currentParent) {\r\n      node.parent = currentParent; // 只赋予了parent属性\r\n      currentParent.children.push(node); // 还需要让父亲记住自己\r\n    }\r\n    stack.push(node);\r\n    currentParent = node; //currentParent为栈中的最后一个\r\n  }\r\n  function chars(text) { // 文本直接放到当前指向的节点中\r\n    // console.log(222, text);\r\n    text = text.replace(/\\s/g, '');\r\n    text && currentParent.children.push({\r\n      type: TEXT_TYPE,\r\n      text,\r\n      parent: currentParent\r\n    });\r\n  }\r\n  function end(tag) {\r\n    // console.log(333, tag);\r\n    let node = stack.pop(); //弹出最后一个，标签是否合法\r\n    currentParent = stack[stack.length - 1]\r\n  }\r\n  function advance(n) {\r\n    html = html.substring(n);\r\n  }\r\n  function parseStartTag() {\r\n    const start = html.match(startTagOpen)\r\n    if (start) {\r\n      const match = {\r\n        tagName: start[1],\r\n        attrs: []\r\n      }\r\n      advance(start[0].length) //截取也就是删除（就是刚刚匹配的标签）\r\n      // 如果不是开始标签的结束就一直匹配下去\r\n      let attr, end\r\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n        advance(attr[0].length);\r\n        match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] || true })\r\n      }\r\n      // 有结束标签\r\n      if (end) {\r\n        advance(end[0].length)\r\n      }\r\n      return match;\r\n    }\r\n\r\n    return false; // 说明不是标签\r\n  }\r\n  while (html) {\r\n    // 如果textEnd为0， 说明是一个开始标签或者结束标签\r\n    // 如果textEnd > 0， 说明就是文本结束的位置\r\n    let textEnd = html.indexOf(\"<\"); //如果indexOf中的索引是0，则说明是个标签\r\n    if (textEnd === 0) {\r\n      const startTagMatch = parseStartTag(); // 开始标签的匹配结果\r\n      if(startTagMatch) { // 解析到开始标签\r\n        start(startTagMatch.tagName, startTagMatch.attrs)\r\n        continue\r\n      }\r\n      let endTagMatch = html.match(endTag);\r\n      if(endTagMatch) {\r\n        advance(endTagMatch[0].length);\r\n        end(endTagMatch[1])\r\n        continue\r\n      }\r\n    }\r\n    if (textEnd > 0) {\r\n      let text = html.substring(0, textEnd); // 就是文本内容\r\n      if (text) {\r\n        chars(text)\r\n        advance(text.length); // 解析到的文本\r\n      }\r\n      // break\r\n    }\r\n  }\r\n  return root;\r\n}\r\n","import { parseHTML } from \"./parse\";\r\n\r\nfunction genProps(attrs) {\r\n  let str = ''\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    let attr = attrs[i];\r\n    if (attr.name === 'style') {\r\n      let obj = {}; \r\n      attr.value.split(';').forEach(item => {\r\n        let [key, value] = item.split(':')\r\n        obj[key] = value;\r\n      })\r\n      attr.value = obj\r\n    }\r\n    str += `${attr.name}: ${JSON.stringify(attr.value)},`\r\n  }\r\n  return `{${str.slice(0, -1)}}` \r\n}\r\nconst defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g; // {{xxx}} 匹配小胡子语法\r\nfunction gen(node) {\r\n  if (node.type === 1) {\r\n    return codegen(node);\r\n  } else {\r\n    let text = node.text\r\n    if (!defaultTagRE.test(text)) {\r\n      return `_v(${JSON.stringify(text)})`\r\n    } else {\r\n      let tokens = []\r\n      let match;\r\n      defaultTagRE.lastIndex = 0;\r\n      let lastIndex = 0;\r\n      while (match = defaultTagRE.exec(text)) {\r\n        // console.log(match, '-------------');\r\n        let index = match.index; //匹配的位置\r\n        if (index > lastIndex) {\r\n          tokens.push(JSON.stringify(text.slice(lastIndex, index)))\r\n        }\r\n        tokens.push(`_s(${match[1].trim()})`)\r\n        lastIndex = index + match[0].length\r\n      }\r\n      // console.log(tokens);\r\n      if (lastIndex < text.length) {\r\n        tokens.push(text.slice(lastIndex))\r\n      }\r\n      return `_v(${tokens.join('+')})`\r\n    }\r\n  }\r\n}\r\nfunction genChildren(children) {\r\n  return children.map(child => gen(child)).join(',')\r\n}\r\nfunction codegen(ast) {\r\n  let children = genChildren(ast.children);\r\n  // let code = (`_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'}${ast.children.length ? `,${children}` : ''})`)\r\n  let code = (`_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'}${ast.children.length ? `,${children}` : ''})`)\r\n  return code;\r\n}\r\nexport default function compileToFunction(template) {\r\n  // 1.将template转换成ast语法树\r\n  let ast = parseHTML(template)\r\n\r\n  // 2.生成render方法，render方法执行后返回的结果就是虚拟dom\r\n  // 模板引擎实现原理都是with + new Function\r\n  let code = codegen(ast);\r\n  code = `with(this){return ${code}}`;\r\n  let render = new Function(code); //根据代码生成render函数\r\n  // console.log(render.toString());\r\n  return render;\r\n}\r\n","let id = 0;\r\n\r\nclass Dep {\r\n  constructor() {\r\n    this.id = id++; // 属性的dep要收集watcher\r\n    this.subs = []; // 这里存放当前属性对应的watcher有哪些\r\n  }\r\n  depend() {\r\n    // 这里我们不希望收集重复的watcher，而且刚才只是一个单向的关系，dep收集watcher\r\n    // watcher同时也要记录dep\r\n    // this.subs.push(Dep.target)\r\n    Dep.target.addDep(this)\r\n  }\r\n  addSub(watcher) {\r\n    this.subs.push(watcher)\r\n  }\r\n  notify() {\r\n    this.subs.forEach(watcher => watcher.update()); //告诉watcher要更新了\r\n  }\r\n}\r\nDep.target = null;\r\n\r\nlet stack = [];\r\nexport function pushTarget(watcher) {\r\n  stack.push(watcher)\r\n  Dep.target = watcher\r\n}\r\nexport function popTarget() {\r\n  stack.pop()\r\n  Dep.target = stack[stack.length - 1]\r\n}\r\n\r\nexport default Dep\r\n","import Dep, { popTarget, pushTarget } from \"./dep\";\r\n\r\nlet id = 0;\r\n\r\n// 1).当我们创建渲染watcher时候会把当前的渲染watcher放到Dep.target上\r\n// 2).调用_render()会取值  走到get上\r\n\r\nclass Watcher { // 不同组件有不同的watcher  目前只有一个 渲染根实例的\r\n  constructor(vm, expOrfn, options, cb) {\r\n    this.id = id++;\r\n    this.renderWatcher = options\r\n    if(typeof expOrfn === 'string') {\r\n      this.getter = function() {\r\n        return vm[expOrfn]\r\n      }\r\n    } else {\r\n      this.getter = expOrfn; // getter意味着调用这个函数可以发生取值操作\r\n    }\r\n    this.deps = []; // 后续我们实现计算属性和一些清理工作要用到\r\n    this.cb = cb\r\n    this.depsId = new Set()\r\n    this.lazy = options.lazy\r\n    this.dirty = this.lazy //缓存值\r\n    this.vm = vm\r\n    this.user = options.user; //标识是否是用户自己的watcher\r\n\r\n    this.value = this.lazy ? undefined : this.get();\r\n  }\r\n  addDep(dep) { // 一个组件对应多个属性  重复属性不用记录\r\n    let id = dep.id;\r\n    if (!this.depsId.has(id)) {\r\n      this.deps.push(dep)\r\n      this.depsId.add(id)\r\n      dep.addSub(this); // watcher已经记住dep并且去重了，此时让dep也记住watcher\r\n    }\r\n  }\r\n  evaluate() {\r\n    this.value = this.get(); //获取到用户函数返回值，并标识为脏\r\n    this.dirty = false\r\n  }\r\n  get() {\r\n    pushTarget(this)\r\n    // Dep.target = this; // 静态属性只有一份\r\n    let value = this.getter.call(this.vm); //一进来就会调下  会去vm上取值\r\n    popTarget()\r\n    // Dep.target = null; // 渲染完毕清空\r\n    return value\r\n  }\r\n  depend() {\r\n    let i = this.deps.length\r\n    while(i--) {\r\n      this.deps[i].depend() //让计算属性watcher也收集渲染watcher\r\n    }\r\n  }\r\n  update() {\r\n    if(this.lazy) {\r\n      // 如果计算属性 依赖的值变化了 就标识计算属性是脏值了\r\n      this.dirty = true\r\n    } else {\r\n      queueWatcher(this); //把当前watcher暂存起来\r\n      // this.get() //重新渲染更新\r\n    }\r\n  }\r\n  run() {\r\n    let oldValue = this.value\r\n    let newValue = this.get()\r\n    if(this.user) {\r\n      this.cb.call(this.vm, newValue, oldValue)\r\n    }\r\n  }\r\n}\r\n\r\nlet queue = [];\r\nlet has = {};\r\nlet pending = false; //防抖\r\n\r\nfunction flushSchedulerQueue() {\r\n  let flushQueue = queue.slice(0)\r\n  queue = [];\r\n  has = {}\r\n  pending = false\r\n  flushQueue.forEach(q => q.run())\r\n}\r\nfunction queueWatcher(watcher) {\r\n  const id = watcher.id\r\n  if(!has[id]) {\r\n    queue.push(watcher)\r\n    has[id] = true\r\n    // 无论update执行多少次，最终我们只执行一轮更新操作\r\n    if(!pending) {\r\n      nextTick(flushSchedulerQueue, 0)\r\n      pending = true\r\n    }\r\n  }\r\n}\r\n\r\nlet callbacks = [];\r\nlet waiting = false;\r\nfunction flushCallbacks() {\r\n  let cbs = callbacks.slice(0)\r\n  waiting = false;\r\n  callbacks = []\r\n  cbs.forEach(cb => cb())// 按照顺序依次执行\r\n}\r\n// nextTick 没有直接使用某个api，而是采用优雅降级的方式\r\n// 内部采用的是promise(ie不兼容), MutationObserver（h5） 可以考虑ie专享的 setImmediate setTimeout\r\nlet timerFunc;\r\nif(Promise) {\r\n  timerFunc = () => {\r\n    Promise.resolve().then(flushCallbacks)\r\n  }\r\n} else if(MutationObserver) {\r\n  let observer = new MutationObserver(flushCallbacks)\r\n  let textNode = document.createTextNode(1);\r\n  observer.observe(textNode, {\r\n    characterData: true\r\n  })\r\n  timerFunc = () => {\r\n    textNode.textContent = 2;\r\n  }\r\n} else if (setImmediate) {\r\n  timerFunc = () => {\r\n    setImmediate(flushCallbacks)\r\n  }\r\n} else {\r\n  timerFunc = () => {\r\n    setTimeout(flushCallbacks)\r\n  }\r\n}\r\n\r\n\r\nexport function nextTick(cb) {\r\n  callbacks.push(cb); // 维护nextTick中的callback方法\r\n  if(!waiting) {\r\n    setTimeout(() => {\r\n      timerFunc(flushCallbacks)//最后一起更新\r\n    }, 0)\r\n    waiting = true\r\n  }\r\n}\r\n// 需要给每个属性增加一个dep，目的是收集watcher\r\n// 一个组件中 会有多个属性(n个属性会对应一个组件)，n个dep对应一个watcher\r\n// 1个属性可以对应多个组件 1个dep对应多个watcher\r\n\r\nexport default Watcher\r\n","\r\n// h()  _c()\r\nexport function createElementVNode(vm, tag, data={}, ...children) {\r\n  if(data == null) {\r\n    data = {}\r\n  }\r\n  let key = data.key\r\n  if(key) {\r\n    delete data.key\r\n  }\r\n  return vnode(\r\n    vm,\r\n    tag,\r\n    key,\r\n    data,\r\n    children\r\n  )\r\n}\r\n\r\n// _v()\r\nexport function createTextVNode(vm, text) {\r\n  return vnode(vm,undefined,undefined,undefined,undefined,text)\r\n}\r\n\r\n// ast做的是 语法层面的转化，描述的是语法本身（描述html，css，js）\r\n// 这里则是虚拟dom描述的是dom元素，可以增加一些自定义属性（描述dom的）\r\nfunction vnode(vm,tag,key,data,children,text) {\r\n  return {\r\n    vm,\r\n    tag,\r\n    key,\r\n    data,\r\n    children,\r\n    text\r\n  }\r\n}\r\n\r\nexport function isSameVnode(vnode1, vnode2) {\r\n  return vnode1.tag === vnode2.tag && vnode1.key === vnode2.key\r\n}\r\n","import { isSameVnode } from \".\";\r\n\r\nexport function createElm(vnode) {\r\n  let { tag, data, children, text } = vnode\r\n  if (typeof tag === 'string') {\r\n    vnode.el = document.createElement(tag);//这里将真实节点和虚拟节点相对应，后续如果修改属性了，通过虚拟节点找到真实节点\r\n\r\n    patchProps(vnode.el,{}, data)\r\n\r\n    children.forEach(child => {\r\n      vnode.el.appendChild(createElm(child))\r\n    })\r\n  } else {\r\n    vnode.el = document.createTextNode(text)\r\n  }\r\n  return vnode.el\r\n}\r\nexport function patchProps(el, oldProps = {}, props) {\r\n  // 老的属性中有，新的没有，要删除老的\r\n  let oldStyles = oldProps.style || {}\r\n  let newStyles = props.style || {}\r\n  for(let key in oldStyles) { //老的样式中有 新的没有则删除\r\n    if(!newStyles[key]) {\r\n      el.style[key] = ''\r\n    }\r\n  }\r\n  for(let key in oldProps) { //老的属性有\r\n    if(!props[key]) { //新的没有则删除属性\r\n      el.removeAttribute(key)\r\n    }\r\n  }\r\n\r\n  for(let key in props) { //用新的覆盖掉老的\r\n    if(key === 'style') {\r\n      for(let styleName in props.style) {\r\n        el.style[styleName] = props.style[styleName];\r\n      }\r\n    } else {\r\n      el.setAttribute(key, props[key])\r\n    }\r\n  }\r\n}\r\n\r\nexport function patch(oldVNode, vnode) {\r\n  const isRealElement = oldVNode.nodeType;\r\n  if (isRealElement) {\r\n    const elm = oldVNode; //获取真实元素\r\n\r\n    const parentElm = elm.parentNode; //拿到父元素\r\n    let newElm = createElm(vnode);\r\n    // console.log(newElm);\r\n    parentElm.insertBefore(newElm, elm.nextSibling); //找到老节点将新生成的插入到他后面\r\n    parentElm.removeChild(elm); //删除节点\r\n\r\n    return newElm\r\n\r\n  } else {\r\n    // diff算法\r\n    // 1.两个节点不是同一个节点，直接删除老的换上新的 （没有比对了）\r\n    // 2.两个节点是同一个节点（判断节点的tag和节点的key） 比较两个节点的属性是否有差异（复用老的节点，将差异的属性更新）\r\n    return patchVNode(oldVNode, vnode)\r\n  }\r\n}\r\nfunction patchVNode(oldVNode, vnode) {\r\n\r\n  let el = vnode.el = oldVNode.el //复用老节点的元素\r\n  if(!isSameVnode(oldVNode, vnode)) {\r\n    // 用老节点进行替换\r\n    let el = createElm(vnode)\r\n    oldVNode.el.parentNode.replaceChild(el ,oldVNode.el)\r\n    return el\r\n  }\r\n  // 文本的情况，文本我们要比较下文本的内容\r\n  if(!oldVNode.tag) { // 文本\r\n    if(!oldVNode.text !== vnode.text) {\r\n      el.textContent = vnode.text; //用新的文本覆盖掉老的\r\n    }\r\n  }\r\n  // 是标签， 我们比较标签的属性\r\n  patchProps(el, oldVNode.data, vnode.data)\r\n\r\n  // 比较子节点 比较的时候 一方有儿子 一方没有儿子\r\n  // 两方都有儿子\r\n  let oldChildren = oldVNode.children || []\r\n  let newChildren = vnode.child || []\r\n  // console.log(oldChildren, newChildren);\r\n  if(oldChildren.length > 0 && newChildren.length > 0) {\r\n    // 需要完整diff算法\r\n    updateChildren(el, oldChildren, newChildren)\r\n  } else if (newChildren.length > 0) { //没有老的有新的\r\n    mountChildren(el, newChildren)\r\n  } else if (oldChildren.length > 0) { //新的没有老的有要删除\r\n    el.innerHTML = ''\r\n    // unmountChildren(el, oldChildren)\r\n  }\r\n\r\n\r\n  // console.log(oldChildren, newChildren);\r\n  return el\r\n}\r\n\r\nfunction mountChildren(el, newChildren) {\r\n  for(let i = 0; i<newChildren.length; i++) {\r\n    let child = newChildren[i]\r\n    el.appendChild(createElm(child))\r\n  }\r\n}\r\nfunction unmountChildren(el, children) {\r\n  children.forEach((child) => removeChild(el, child.el));\r\n}\r\nfunction updateChildren(el, oldChildren, newChildren) {\r\n  // 我们操作列表经常会是有 push shift pop unshift reverse sort这些方法（针对这些情况做一个优化） \r\n  // vue2中采用双指针的方式 比较两个节点\r\n  let oldStartIndex = 0;\r\n  let newStartIndex = 0;\r\n  let oldEndIndex = oldChildren.length - 1;\r\n  let newEndIndex = newChildren.length - 1;\r\n\r\n  let oldStartVnode = oldChildren[0];\r\n  let newStartVnode = newChildren[0];\r\n\r\n  let oldEndVnode = oldChildren[oldEndIndex];\r\n  let newEndVnode = newChildren[newEndIndex];\r\n\r\n  function makeIndexByKey(children) {\r\n    let map = {}\r\n    children.forEach((child, index) => {\r\n      map[child.key] = index;\r\n    });\r\n    return map\r\n  }\r\n  let map = makeIndexByKey(oldChildren)\r\n  console.log(map);\r\n\r\n  while(oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) { //有一个不满足就停止\r\n    // 双方有一方指针，大于尾部指针则停止循环\r\n    if(!oldStartVnode){\r\n      oldStartVnode = oldChildren[++oldStartIndex]\r\n    } else if(!oldEndVnode) {\r\n      oldEndVnode = oldChildren[--oldEndIndex]\r\n    } else if(isSameVnode(oldStartVnode, newStartVnode)) {\r\n      patchVNode(oldStartVnode, newStartVnode); // 如果是相同节点，则递归比较子节点\r\n      oldStartVnode = oldChildren[++oldStartIndex];\r\n      newStartVnode = newChildren[++newStartIndex]\r\n      // 比较开头节点\r\n    } else\r\n    if(isSameVnode(oldEndVnode, newEndVnode)) {\r\n      patchVNode(oldEndVnode, newEndVnode); // 如果是相同节点，则递归比较子节点\r\n      oldEndVnode = oldChildren[--oldEndIndex];\r\n      newEndVnode = newChildren[--newEndIndex]\r\n      // 比较开头节点\r\n    } else\r\n\r\n    // 交叉比对 abcd => dabc\r\n    if(isSameVnode(oldEndVnode, newStartVnode)) {\r\n      patchVNode(oldEndVnode, newStartVnode);\r\n      // insertBefore具备移动性 会将原来的元素移动\r\n      el.insertBefore(oldEndVnode.el, oldStartVnode.el); //将老的尾部移动到老的前面去\r\n      oldEndVnode = oldChildren[--oldEndIndex];\r\n      newStartVnode = newChildren[++newStartIndex];\r\n\r\n    } else if(isSameVnode(oldStartVnode, newEndVnode)) {\r\n      patchVNode(oldEndVnode, newStartVnode);\r\n      // insertBefore具备移动性 会将原来的元素移动\r\n      el.insertBefore(oldStartVnode.el, oldStartVnode.el.nextSibling); //将老的尾部移动到老的头部\r\n      oldStartVnode = oldChildren[++oldStartIndex];\r\n      newEndVnode = newChildren[--newEndIndex]\r\n    } else {\r\n      // 在给动态列表添加key的时候，要尽量避免使用索引，因为索引前后都是从0开始，可能会发生错误复用\r\n      // 乱想比对\r\n      // 根据老的列表做一个映射关系，用新的去找，找到则移动，找不到则添加，最后多余的就删除\r\n      let moveIndex = map[newStartVnode.key]; // 如果拿到则说明是我要移动的索引\r\n      if(moveIndex !== undefined) {\r\n        let moveVnode = oldChildren[moveIndex];\r\n        el.insertBefore(moveVnode.el, oldStartVnode.el)\r\n        oldChildren[moveIndex] = undefined; //表示这个节点已经移动走了\r\n        patchVNode(moveVnode, newStartVnode); //比对属性和子节点\r\n      } else {\r\n        el.insertBefore(create(newStartVnode), oldStartVnode.el);\r\n      }\r\n      newStartVnode = newChildren[++newStartIndex]\r\n    }\r\n  }\r\n  if (newStartIndex <= newEndIndex) { // 新的多了多于的插入进去\r\n    for(let i = newStartIndex; i <= newEndIndex; i++) {\r\n      let childEl = createElm(newChildren[i])\r\n      // el.appendChild(childEl)\r\n      // 这里可能向后追加，还有可能向前追加\r\n      let anchor = newChildren[newEndIndex + 1] ? newChildren[newEndIndex + 1].el : null; //获取下一个元素\r\n      // console.log(anchor);\r\n      el.insertBefore(childEl, anchor) // anchor 为null的时候则会认为是appendChild\r\n    }\r\n  }\r\n  if (oldStartIndex <= oldEndIndex) { // 老的多了删掉老的\r\n    for(let i = oldStartIndex; i <= oldEndIndex; i++) {\r\n      if(oldChildren[i].el) {\r\n        let childEl = oldChildren[i].el\r\n        el.removeChild(childEl)\r\n      }\r\n    }\r\n  }\r\n\r\n  // 我们为了比较两个儿子的时候  增强性能  我们会有些优化手段\r\n  // 如果批量向页面中修改出入内容，浏览器会自动优化\r\n}\r\n","import Watcher from \"./observe/watcher\";\r\nimport { createElementVNode, createTextVNode } from \"./vdom\";\r\nimport { patch } from \"./vdom/patch\";\r\n\r\n\r\n\r\nexport function initLifeCycle(Vue) {\r\n  // 将vnode转化成真实dom\r\n  Vue.prototype._update = function (vnode) {\r\n    const vm = this;\r\n    const el = vm.$el\r\n    // console.log(vnode, el);\r\n    // patch既有初始化的功能，又有更新的功能\r\n    // const prevNode = vm._vnode\r\n    // vm._vnode = vnode; //把组件第一次产生的虚拟节点保存到_vnode上\r\n    // if(prevNode) { //之前渲染过了\r\n    //   vm.$el = patch(prevNode, vnode);\r\n    // } else {\r\n    //   vm.$el = patch(el, vnode);\r\n    // }\r\n    vm.$el = patch(el, vnode);\r\n  }\r\n  // _c('div',{}, ...children)\r\n  Vue.prototype._c = function () {\r\n    return createElementVNode(this, ...arguments)\r\n  }\r\n  // _v(text)\r\n  Vue.prototype._v = function () {\r\n    return createTextVNode(this, ...arguments)\r\n  }\r\n  Vue.prototype._s = function (value) {\r\n    if (typeof value !== 'object') return value\r\n    return JSON.stringify(value)\r\n  }\r\n  // 渲染虚拟dom\r\n  Vue.prototype._render = function () {\r\n    const vm = this\r\n    // console.log(vm.name);\r\n    // 让with中的this指向vm\r\n    // 当渲染的时候回去实例取值，我们可以将属性和视图绑定在一起\r\n    return vm.$options.render.call(vm); // vm是通过ast语法转义生成的render方法\r\n  }\r\n}\r\n\r\nexport function mountComponent(vm, el) { //这里的el是通过querySelect处理过的\r\n  vm.$el = el\r\n  // 1. 调用render方法产生虚拟节点 虚拟dom\r\n  const updateComponent = () => {\r\n  vm._update(vm._render()); //vm.$options.render() 返回的是虚拟节点\r\n\r\n  }\r\n  const watcher = new Watcher(vm, updateComponent, true) // true用来表示是个渲染watcher\r\n  // console.log(watcher);\r\n  // 2. 根据虚拟dom产生真实dom\r\n  // 3. 插入到el元素\r\n\r\n}\r\n\r\n// vue核心流程 \r\n// 1）创建了响应式数据  2）模板转换成ast语法树\r\n// 3） 将ast语法树转换成render函数  4）后续每次数据更新就可以只执行render函数（无需再次执行ast转化成的过程）\r\n\r\n\r\n\r\n// render函数会去产生虚拟节点 （使用响应式数据)\r\n// 根据生成的虚拟节点创造真实的dom\r\n\r\nexport function callHook(vm, hook) {\r\n  const handlers = vm.$options[hook]\r\n  if(handlers) {\r\n    handlers.forEach(handler => handler.call(vm))\r\n  }\r\n\r\n}\r\n","// 重写数租中的部分方法\r\n\r\n\r\nlet oldArrayProto = Array.prototype; //获取数组中的原型\r\n\r\nexport let newArrayProto = Object.create(oldArrayProto);\r\n\r\nlet methods = [\r\n  'push',\r\n  'pop',\r\n  'shift',\r\n  'unshift',\r\n  'splice',\r\n  'reverse',\r\n  'sort'\r\n]\r\n\r\nmethods.forEach(method => { \r\n  newArrayProto[method] = function (...args) { // 重写数组的方法\r\n    const result = oldArrayProto[method].call(this, ...args) //内部调用原来的方法， 函数的劫持\r\n\r\n    let inserted;\r\n    let ob = this.__ob__\r\n    switch(method) {\r\n      case 'push':\r\n      case 'unshift':\r\n        inserted = args\r\n        break;\r\n      case 'splice': \r\n        inserted = args.slice(2);\r\n      default:\r\n        break\r\n      }\r\n      // console.log(inserted); //新增的内容\r\n      if (inserted) {\r\n        // 对新传递过来的值进行观测\r\n        ob.observeArray(inserted)\r\n      }\r\n      // console.log('更新');\r\n      ob.dep.notify(); //数组变化了通知对应的watcher走更新逻辑\r\n    return result\r\n  }\r\n})\r\n","import { newArrayProto } from \"./array\"\r\nimport Dep from \"./dep\"\r\n\r\nclass Observer{\r\n  constructor(data) {\r\n    // Object.defineProperty只能劫持已经存在的属性(vm里面会单独为此写一些api  $set $delete)\r\n\r\n    // 给每个对象都增加收集功能\r\n    this.dep = new Dep()\r\n\r\n    // data.__ob__ = this\r\n    Object.defineProperty(data, \"__ob__\", { //给对象添加个标识___ob___，判断是否被观测过\r\n      value: this,\r\n      enumerable: false //不可枚举\r\n    })\r\n    // 判断是否是数组   \r\n    if (Array.isArray(data)) {\r\n      // 重写数组中的方法，可以修改数组本身的7个变异方法\r\n      data.__proto__ = newArrayProto //保留数组原有特性，并重写部分方法\r\n      this.observeArray(data) // 观测数组\r\n    } else {\r\n      this.walk(data)\r\n    }\r\n  }\r\n\r\n  walk(data) { //循环对象 对属性进行劫持\r\n    // 重新定义属性  性能差\r\n    Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n  }\r\n  observeArray(data) {\r\n    data.forEach(item => observe(item)) //检测数组中的对象\r\n  }\r\n}\r\n// 深层次嵌套会递归  递归多了性能差，不存在属性监控不到，存在的属性要重写方法\r\nfunction dependArray(value) {\r\n  for(let i = 0; i < value.length; i++) {\r\n    let current = value[i]\r\n    current.__ob__ && current.__ob__.dep.depend()\r\n    if(Array.isArray(current)) {\r\n      dependArray(current)\r\n    }\r\n  }\r\n}\r\nexport function defineReactive(target, key, value) {\r\n  let childOb = observe(value) //对所有对象进行属性劫持  childOb.dep就是用来收集依赖的\r\n  let dep = new Dep(); // 让每个属性都有一个dep\r\n  Object.defineProperty(target, key, {\r\n    get() {\r\n      if(Dep.target) {\r\n        dep.depend(); //这个属性收集器dep记住当前的watcher\r\n        if(childOb) {\r\n          childOb.dep.depend() //让数组和对象本身也进行依赖收集\r\n          if(Array.isArray(value)) {\r\n            dependArray(value)\r\n          }\r\n        }\r\n      }\r\n      return value\r\n    },\r\n    set(newValue) {\r\n      if(newValue === value) return\r\n      observe(newValue)\r\n      value = newValue\r\n      dep.notify();\r\n    }\r\n  })\r\n}\r\n\r\nexport function observe(data) {\r\n    // console.log(data);\r\n    // 对对象进行数据劫持\r\n    if (typeof data !== 'object' || data == null) {\r\n      return // 只对对象进行劫持\r\n    }\r\n    if (data.__ob__ instanceof Observer) { //说明这个对象被代理过看\r\n      return data.__ob__\r\n    }\r\n    // 判断对象是否被劫持 （添加一个实例，用实例判断是否被劫持过）\r\n    return new Observer(data)\r\n}\r\n","import Dep from \"./observe/dep\"\r\nimport { observe } from \"./observe/index\"\r\nimport Watcher, { nextTick } from './observe/watcher'\r\n\r\nexport function initState(vm) {\r\n  // 数据劫持\r\n  const opts = vm.$options //获取所有的选项\r\n  if (opts.data) { //有数据初始化数据\r\n    initData(vm)\r\n  }\r\n  if (opts.computed) {\r\n    initComputed(vm)\r\n  }\r\n  if (opts.watch) {\r\n    initWatch(vm)\r\n  }\r\n}\r\nfunction initWatch(vm) {\r\n  let watch = vm.$options.watch;\r\n  for(let key in watch) {\r\n    const handler = watch[key]\r\n\r\n    if(Array.isArray(handler)) {\r\n      for(let i = 0; i < handler.length; i++) {\r\n        createWatcher(vm, key, handler[i])\r\n      }\r\n    } else {\r\n      createWatcher(vm, key, handler)\r\n    }\r\n  }\r\n}\r\nfunction createWatcher(vm, key, handler) {\r\n  if(typeof handler === 'string') {\r\n    handler = vm[handler]\r\n  }\r\n  return vm.$watch(key, handler)\r\n}\r\n\r\n\r\nfunction proxy(vm, target, key) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[target][key]\r\n    },\r\n    set(newValue) {\r\n      vm[target][key] = newValue\r\n    }\r\n  })\r\n}\r\nfunction initData(vm) {\r\n  let data = vm.$options.data //data可能是函数和对象\r\n  data = typeof data === 'function'? data.call(vm) : data\r\n  \r\n  vm._data = data //将返回的对象放到_data上\r\n  // 对数据进行数据劫持\r\n  observe(data)\r\n\r\n  // 将vm._data 用vm代理\r\n  for(let key in data) {\r\n    proxy(vm,'_data', key)\r\n  }\r\n\r\n}\r\nfunction initComputed(vm) {\r\n  const computed = vm.$options.computed\r\n  let watchers = vm._computedWatchers = {} //将计算属性watcher保存到vm上\r\n  for(let key in computed) {\r\n    let userDef = computed[key]\r\n    // 我们需要监控计算属性中get的变化\r\n    let fn = typeof userDef === 'function' ? userDef : userDef.get\r\n    // 默认直接new watcher时候会立即执行fn  将属性和watcher对应起来\r\n    watchers[key] = new Watcher(vm, fn, {lazy: true})\r\n\r\n\r\n\r\n\r\n    defineComputed(vm, key, userDef)\r\n  }\r\n}\r\nfunction defineComputed(target, key, userDef) {\r\n  // console.log(target, key, userDef);\r\n  const getter = typeof userDef === 'function' ? userDef : userDef.get\r\n  const setter = userDef.set || (() => {})\r\n  // 通过实例获取到对应属性\r\n  Object.defineProperty(target, key, {\r\n    get: createComputedGetter(key),\r\n    set: setter\r\n  })\r\n}\r\n// 计算属性不会收集依赖，只会让自己的依赖属性去收集依赖\r\nfunction createComputedGetter(key) {\r\n  // 检查是否要执行这个getter\r\n  return function() {\r\n    const watcher = this._computedWatchers[key]; //获取到对应属性的watcher\r\n    if(watcher.dirty) {\r\n      // 如果是脏就去执行用户传入的函数\r\n      watcher.evaluate() //求值后 dirty变为false 下次就不求值了\r\n    }\r\n    if(Dep.target) { // 计算属性出栈后 还有渲染watcher，应该让计算属性watcher里面的属性 也去收集上一层watcher\r\n      watcher.depend()\r\n    }\r\n    return watcher.value // 最后返回的是watcher上的值\r\n  }\r\n}\r\nexport function initStateMixin(Vue) {\r\n  Vue.prototype.$nextTick = nextTick\r\n  // 最终调用的都是这个方法\r\n  Vue.prototype.$watch = function(expOrFn, cb, options = {}) {\r\n  new Watcher(this, expOrFn, {user: true}, cb)\r\n}\r\n\r\n}\r\n","import compileToFunction from \"./compiler\";\r\nimport { mountComponent, callHook } from \"./lifecycle\";\r\nimport { initState } from \"./state\";\r\nimport { mergeOptions } from \"./utils\";\r\n\r\nexport function initMixin(Vue) {\r\n  Vue.prototype._init = function(options) { // 初始化操作\r\n    // vue 自己的属性\r\n    const vm = this\r\n    // 我们定义的全局指令和过滤器都会挂载到实例上\r\n    this.$options = mergeOptions(this.constructor.options ,options); //将用户的选项挂载到实例上\r\n\r\n    callHook(vm, 'beforeCreate')\r\n    // 初始化状态 初始化计算属性\r\n    initState(vm)\r\n    callHook(vm, 'created')\r\n    if (options.el) {\r\n      vm.$mount(options.el); //实现数据的挂载\r\n    }\r\n  }\r\n  Vue.prototype.$mount = function(el) {\r\n    const vm = this;\r\n    el = document.querySelector(el)\r\n    let ops = vm.$options\r\n    if(!ops.render) { // 先进行查找有没有render函数\r\n      let template; // 没有render看一下是否有template，没有就才用外部的template\r\n      if(!ops.template && el) { // 没有模板但是有el\r\n        template = el.outerHTML\r\n      } else {\r\n        if(el) {\r\n          template = ops.template; // 有el，就才用模板中的内容\r\n        }\r\n      }\r\n      // 有template就用template\r\n      if(template) {\r\n        const render = compileToFunction(template);\r\n        ops.render = render;\r\n      }\r\n    }\r\n\r\n    mountComponent(vm, el); // 组件的挂载\r\n    // console.log(ops.render); // 获取render方法\r\n    // script 标签引用的vue.global.js，这个编译过程是在浏览器运行的\r\n    // runtime是不包含模板编译的，整个编译是打包的时候通过loader来转义.vue文件的，用runtime的时候不能使用template\r\n  }\r\n}\r\n\r\n","import { initGlobalAPI } from \"./globalApi\";\r\nimport { initMixin } from \"./init\"\r\nimport { initLifeCycle } from \"./lifecycle\";\r\n// import Watcher,  from \"./observe/watcher\";\r\nimport { initStateMixin } from \"./state\";\r\n// import { createElm, patch } from \"./vdom/patch\";\r\n// import compileToFunction from \"./compiler\";\r\n\r\nfunction Vue(options) { // options就是用户的选项\r\n  this._init(options) // 默认调用了init\r\n}\r\n\r\ninitMixin(Vue); //扩展init方法\r\ninitLifeCycle(Vue); //vm._update vm._render\r\ninitGlobalAPI(Vue); //实现全局api\r\ninitStateMixin(Vue); //实现了nextTick、$watch\r\n\r\n\r\n// 测试\r\n// let render1 = compileToFunction(`<ul key=\"a\" style=\"color: red\">\r\n//   <li key='a'>a</li>\r\n//   <li key='b'>b</li>\r\n//   <li key='c'>c</li>\r\n//   <li key='d'>d</li>\r\n// </ul>`)\r\n// let vm = new Vue({data:{name: 'zs'}})\r\n// let prevNode = render1.call(vm)\r\n\r\n// let el = createElm(prevNode)\r\n// document.body.appendChild(el)\r\n\r\n// let render2 = compileToFunction(`<ul key=\"b\" style=\"color: #000;background: #bfc\">\r\n//   <li key='a'>a</li>\r\n//   <li key='b'>b</li>\r\n//   <li key='c'>c</li>\r\n// </ul>`)\r\n// let vm2 = new Vue({data:{name: '王五'}})\r\n// let nextNode = render2.call(vm2)\r\n// // console.log(prevNode, nextNode);\r\n// // 直接将新的节点替换掉了老的，不是直接替换，而是比较两个人的区别之后在替换，diff算法\r\n// // diff算法是一个平级比较的过程 父亲和父亲比 儿子和儿子比\r\n// setTimeout(() => {\r\n//   patch(prevNode, nextNode)\r\n//   // let newEl = createElm(nextNode)\r\n//   // el.parentNode.replaceChild(newEl, el)\r\n// }, 3000)\r\n\r\n\r\nexport default Vue\r\n"],"names":["strats","LIFECYCLE","forEach","hook","p","c","concat","components","parentVal","childVal","res","Object","create","key","mergeOptions","parent","child","options","mergeField","hasOwnProperty","initGlobalAPI","Vue","mixin","extend","Sub","_init","prototype","constructor","component","id","definition","console","log","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","i","obj","split","item","JSON","stringify","slice","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","ast","code","compileToFunction","template","render","Function","Dep","subs","target","addDep","watcher","update","pushTarget","popTarget","Watcher","vm","expOrfn","cb","renderWatcher","getter","deps","depsId","Set","lazy","dirty","user","undefined","get","dep","has","add","addSub","call","depend","queueWatcher","oldValue","newValue","queue","pending","flushSchedulerQueue","flushQueue","q","run","nextTick","callbacks","waiting","flushCallbacks","cbs","timerFunc","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","observe","characterData","textContent","setImmediate","setTimeout","createElementVNode","data","vnode","createTextVNode","isSameVnode","vnode1","vnode2","createElm","el","createElement","patchProps","appendChild","oldProps","props","oldStyles","style","newStyles","removeAttribute","styleName","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","patchVNode","replaceChild","oldChildren","newChildren","updateChildren","mountChildren","innerHTML","oldStartIndex","newStartIndex","oldEndIndex","newEndIndex","oldStartVnode","newStartVnode","oldEndVnode","newEndVnode","makeIndexByKey","moveIndex","moveVnode","childEl","anchor","initLifeCycle","_update","$el","_c","arguments","_v","_s","_render","$options","mountComponent","updateComponent","callHook","handlers","handler","oldArrayProto","Array","newArrayProto","methods","method","args","result","inserted","ob","__ob__","observeArray","notify","Observer","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","dependArray","current","childOb","set","initState","opts","initData","computed","initComputed","watch","initWatch","createWatcher","$watch","proxy","_data","watchers","_computedWatchers","userDef","fn","defineComputed","setter","createComputedGetter","evaluate","initStateMixin","$nextTick","expOrFn","initMixin","$mount","querySelector","ops","outerHTML"],"mappings":"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"}