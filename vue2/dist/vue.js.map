{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/index.js","../src/utils.js","../src/globalApi.js","../src/observe/dep.js","../src/observe/watcher.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 匹配的分组是个标签名 <xxx 匹配到的是开始 标签的名字\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配的是</xxx> 最终匹配到的分组 就是结束标签的名字\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\n// 匹配属性 第一个分组是属性的key value就是分组3/分组4/分组5\nconst startTagClose = /^\\s*(\\/?)>/; // <div> <br/>\nconst defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g; // {{xxx}} 匹配小胡子语法\n\nexport function parseHTML(html) { // html最开始肯定是一个 <div>hello</div>\n\n  const ELEMENT_TYPE = 1;\n  const TEXT_TYPE = 3;\n  const stack = []; // 用于存放元素\n  let currentParent; //指向的是栈中的最后一个\n  let root;\n  \n  function createASTElement(tag, attrs) {\n    return {\n      tag,\n      type: ELEMENT_TYPE,\n      children: [],\n      attrs,\n      parent: null\n    }\n  }\n  // 利用栈型结构来构造一颗树\n  function start(tag, attrs) {\n    // console.log(111, tag, attrs);\n    let node = createASTElement(tag, attrs); //创造一个ast节点\n    if(!root) { // 判断是否是空树\n      root = node; //如果为空则当前是树的根节点\n    }\n    if(currentParent) {\n      node.parent = currentParent; // 只赋予了parent属性\n      currentParent.children.push(node); // 还需要让父亲记住自己\n    }\n    stack.push(node);\n    currentParent = node; //currentParent为栈中的最后一个\n  }\n  function chars(text) { // 文本直接放到当前指向的节点中\n    // console.log(222, text);\n    text = text.replace(/\\s/g, '');\n    text && currentParent.children.push({\n      type: TEXT_TYPE,\n      text,\n      parent: currentParent\n    });\n  }\n  function end(tag) {\n    // console.log(333, tag);\n    let node = stack.pop(); //弹出最后一个，标签是否合法\n    currentParent = stack[stack.length - 1]\n  }\n  function advance(n) {\n    html = html.substring(n);\n  }\n  function parseStartTag() {\n    const start = html.match(startTagOpen)\n    if (start) {\n      const match = {\n        tagName: start[1],\n        attrs: []\n      }\n      advance(start[0].length) //截取也就是删除（就是刚刚匹配的标签）\n      // 如果不是开始标签的结束就一直匹配下去\n      let attr, end\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] || true })\n      }\n      // 有结束标签\n      if (end) {\n        advance(end[0].length)\n      }\n      return match;\n    }\n\n    return false; // 说明不是标签\n  }\n  while (html) {\n    // 如果textEnd为0， 说明是一个开始标签或者结束标签\n    // 如果textEnd > 0， 说明就是文本结束的位置\n    let textEnd = html.indexOf(\"<\"); //如果indexOf中的索引是0，则说明是个标签\n    if (textEnd === 0) {\n      const startTagMatch = parseStartTag(); // 开始标签的匹配结果\n      if(startTagMatch) { // 解析到开始标签\n        start(startTagMatch.tagName, startTagMatch.attrs)\n        continue\n      }\n      let endTagMatch = html.match(endTag);\n      if(endTagMatch) {\n        advance(endTagMatch[0].length);\n        end(endTagMatch[1])\n        continue\n      }\n    }\n    if (textEnd > 0) {\n      let text = html.substring(0, textEnd); // 就是文本内容\n      if (text) {\n        chars(text)\n        advance(text.length); // 解析到的文本\n      }\n      // break\n    }\n  }\n  return root;\n}\n","import { parseHTML } from \"./parse\";\n\nfunction genProps(attrs) {\n  let str = ''\n  for (let i = 0; i < attrs.length; i++) {\n    let attr = attrs[i];\n    if (attr.name === 'style') {\n      let obj = {}; \n      attr.value.split(';').forEach(item => {\n        let [key, value] = item.split(':')\n        obj[key] = value;\n      })\n      attr.value = obj\n    }\n    str += `${attr.name}: ${JSON.stringify(attr.value)},`\n  }\n  return `{${str.slice(0, -1)}}` \n}\nconst defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g; // {{xxx}} 匹配小胡子语法\nfunction gen(node) {\n  if (node.type === 1) {\n    return codegen(node);\n  } else {\n    let text = node.text\n    if (!defaultTagRE.test(text)) {\n      return `_v(${JSON.stringify(text)})`\n    } else {\n      let tokens = []\n      let match;\n      defaultTagRE.lastIndex = 0;\n      let lastIndex = 0;\n      while (match = defaultTagRE.exec(text)) {\n        // console.log(match, '-------------');\n        let index = match.index; //匹配的位置\n        if (index > lastIndex) {\n          tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n        }\n        tokens.push(`_s(${match[1].trim()})`)\n        lastIndex = index + match[0].length\n      }\n      // console.log(tokens);\n      if (lastIndex < text.length) {\n        tokens.push(text.slice(lastIndex))\n      }\n      return `_v(${tokens.join('+')})`\n    }\n  }\n}\nfunction genChildren(children) {\n  return children.map(child => gen(child)).join(',')\n}\nfunction codegen(ast) {\n  let children = genChildren(ast.children);\n  // let code = (`_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'}${ast.children.length ? `,${children}` : ''})`)\n  let code = (`_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'}${ast.children.length ? `,${children}` : ''})`)\n  return code;\n}\nexport default function compileToFunction(template) {\n  // 1.将template转换成ast语法树\n  let ast = parseHTML(template)\n\n  // 2.生成render方法，render方法执行后返回的结果就是虚拟dom\n  // 模板引擎实现原理都是with + new Function\n  let code = codegen(ast);\n  code = `with(this){return ${code}}`;\n  let render = new Function(code); //根据代码生成render函数\n  // console.log(render.toString());\n  return render;\n}\n","\n// 静态方法\nconst strats = {}\nconst LIFECYCLE = [\n  'beforeCreate',\n  'created'\n]\nLIFECYCLE.forEach(hook => {\n  strats[hook] = function (p, c) {\n    if (c) { //如果儿子有 父亲有  让父亲和儿子拼在一起\n      if (p) {\n        return p.concat(c)\n      } else {\n        return [c]; // 儿子有父亲没有 ，则将儿子包装成数组\n      }\n    } else {\n      return p; // 如果儿子没有则用父亲即可\n    }\n  }\n})\nexport function mergeOptions(parent, child) {\n  const options = {}\n\n  for (let key in parent) {\n    mergeField(key)\n  }\n  for (let key in child) {\n    if (!parent.hasOwnProperty(key)) {\n      mergeField(key)\n    }\n  }\n\n  function mergeField(key) {\n    // 采用策略模式 减少if/else\n    if (strats[key]) {\n      options[key] = strats[key](parent[key], child[key])\n    } else {\n      // 不在策略中则以儿子为主\n      options[key] = child[key] || parent[key]\n    }\n  }\n\n  return options\n}\n","import { mergeOptions } from \"./utils\"\n\n\nexport function initGlobalAPI(Vue) {\n  Vue.options = {}\n  \n  Vue.mixin = function (mixin) {\n    // 将用户选项和全局options进行合并\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  }\n}\n","let id = 0;\n\nclass Dep {\n  constructor() {\n    this.id = id++; // 属性的dep要收集watcher\n    this.subs = []; // 这里存放当前属性对应的watcher有哪些\n  }\n  depend() {\n    // 这里我们不希望收集重复的watcher，而且刚才只是一个单向的关系，dep收集watcher\n    // watcher同时也要记录dep\n    // this.subs.push(Dep.target)\n    Dep.target.addDep(this)\n  }\n  addSub(watcher) {\n    this.subs.push(watcher)\n  }\n  notify() {\n    this.subs.forEach(watcher => watcher.update()); //告诉watcher要更新了\n  }\n}\nDep.target = null;\n\nlet stack = [];\nexport function pushTarget(watcher) {\n  stack.push(watcher)\n  Dep.target = watcher\n}\nexport function popTarget() {\n  stack.pop()\n  Dep.target = stack[stack.length - 1]\n}\n\nexport default Dep\n","import Dep, { popTarget, pushTarget } from \"./dep\";\n\nlet id = 0;\n\n// 1).当我们创建渲染watcher时候会把当前的渲染watcher放到Dep.target上\n// 2).调用_render()会取值  走到get上\n\nclass Watcher { // 不同组件有不同的watcher  目前只有一个 渲染根实例的\n  constructor(vm, expOrfn, options, cb) {\n    this.id = id++;\n    this.renderWatcher = options\n    if(typeof expOrfn === 'string') {\n      this.getter = function() {\n        return vm[expOrfn]\n      }\n    } else {\n      this.getter = expOrfn; // getter意味着调用这个函数可以发生取值操作\n    }\n    this.deps = []; // 后续我们实现计算属性和一些清理工作要用到\n    this.cb = cb\n    this.depsId = new Set()\n    this.lazy = options.lazy\n    this.dirty = this.lazy //缓存值\n    this.vm = vm\n    this.user = options.user; //标识是否是用户自己的watcher\n\n    this.value = this.lazy ? undefined : this.get();\n  }\n  addDep(dep) { // 一个组件对应多个属性  重复属性不用记录\n    let id = dep.id;\n    if (!this.depsId.has(id)) {\n      this.deps.push(dep)\n      this.depsId.add(id)\n      dep.addSub(this); // watcher已经记住dep并且去重了，此时让dep也记住watcher\n    }\n  }\n  evaluate() {\n    this.value = this.get(); //获取到用户函数返回值，并标识为脏\n    this.dirty = false\n  }\n  get() {\n    pushTarget(this)\n    // Dep.target = this; // 静态属性只有一份\n    let value = this.getter.call(this.vm); //一进来就会调下  会去vm上取值\n    popTarget()\n    // Dep.target = null; // 渲染完毕清空\n    return value\n  }\n  depend() {\n    let i = this.deps.length\n    while(i--) {\n      this.deps[i].depend() //让计算属性watcher也收集渲染watcher\n    }\n  }\n  update() {\n    if(this.lazy) {\n      // 如果计算属性 依赖的值变化了 就标识计算属性是脏值了\n      this.dirty = true\n    } else {\n      queueWatcher(this); //把当前watcher暂存起来\n      // this.get() //重新渲染更新\n    }\n  }\n  run() {\n    let oldValue = this.value\n    let newValue = this.get()\n    if(this.user) {\n      this.cb.call(this.vm, newValue, oldValue)\n    }\n  }\n}\n\nlet queue = [];\nlet has = {};\nlet pending = false; //防抖\n\nfunction flushSchedulerQueue() {\n  let flushQueue = queue.slice(0)\n  queue = [];\n  has = {}\n  pending = false\n  flushQueue.forEach(q => q.run())\n}\nfunction queueWatcher(watcher) {\n  const id = watcher.id\n  if(!has[id]) {\n    queue.push(watcher)\n    has[id] = true\n    // 无论update执行多少次，最终我们只执行一轮更新操作\n    if(!pending) {\n      nextTick(flushSchedulerQueue, 0)\n      pending = true\n    }\n  }\n}\n\nlet callbacks = [];\nlet waiting = false;\nfunction flushCallbacks() {\n  let cbs = callbacks.slice(0)\n  waiting = false;\n  callbacks = []\n  cbs.forEach(cb => cb())// 按照顺序依次执行\n}\n// nextTick 没有直接使用某个api，而是采用优雅降级的方式\n// 内部采用的是promise(ie不兼容), MutationObserver（h5） 可以考虑ie专享的 setImmediate setTimeout\nlet timerFunc;\nif(Promise) {\n  timerFunc = () => {\n    Promise.resolve().then(flushCallbacks)\n  }\n} else if(MutationObserver) {\n  let observer = new MutationObserver(flushCallbacks)\n  let textNode = document.createTextNode(1);\n  observer.observe(textNode, {\n    characterData: true\n  })\n  timerFunc = () => {\n    textNode.textContent = 2;\n  }\n} else if (setImmediate) {\n  timerFunc = () => {\n    setImmediate(flushCallbacks)\n  }\n} else {\n  timerFunc = () => {\n    setTimeout(flushCallbacks)\n  }\n}\n\n\nexport function nextTick(cb) {\n  callbacks.push(cb); // 维护nextTick中的callback方法\n  if(!waiting) {\n    setTimeout(() => {\n      timerFunc(flushCallbacks)//最后一起更新\n    }, 0)\n    waiting = true\n  }\n}\n// 需要给每个属性增加一个dep，目的是收集watcher\n// 一个组件中 会有多个属性(n个属性会对应一个组件)，n个dep对应一个watcher\n// 1个属性可以对应多个组件 1个dep对应多个watcher\n\nexport default Watcher\n","\n// h()  _c()\nexport function createElementVNode(vm, tag, data={}, ...children) {\n  if(data == null) {\n    data = {}\n  }\n  let key = data.key\n  if(key) {\n    delete data.key\n  }\n  return vnode(\n    vm,\n    tag,\n    key,\n    data,\n    children\n  )\n}\n\n// _v()\nexport function createTextVNode(vm, text) {\n  return vnode(vm,undefined,undefined,undefined,undefined,text)\n}\n\n// ast做的是 语法层面的转化，描述的是语法本身（描述html，css，js）\n// 这里则是虚拟dom描述的是dom元素，可以增加一些自定义属性（描述dom的）\nfunction vnode(vm,tag,key,data,children,text) {\n  return {\n    vm,\n    tag,\n    key,\n    data,\n    children,\n    text\n  }\n}\n\nexport function isSameVnode(vnode1, vnode2) {\n  return vnode1.tag === vnode2.tag && vnode1.key === vnode2.key\n}\n","import { isSameVnode } from \".\";\n\nexport function createElm(vnode) {\n  let { tag, data, children, text } = vnode\n  if (typeof tag === 'string') {\n    vnode.el = document.createElement(tag);//这里将真实节点和虚拟节点相对应，后续如果修改属性了，通过虚拟节点找到真实节点\n\n    patchProps(vnode.el,{}, data)\n\n    children.forEach(child => {\n      vnode.el.appendChild(createElm(child))\n    })\n  } else {\n    vnode.el = document.createTextNode(text)\n  }\n  return vnode.el\n}\nexport function patchProps(el, oldProps, props) {\n  // 老的属性中有，新的没有，要删除老的\n  let oldStyles = oldProps.style || {}\n  let newStyles = props.style || {}\n  for(let key in oldStyles) { //老的样式中有 新的没有则删除\n    if(!newStyles[key]) {\n      el.style[key] = ''\n    }\n  }\n  for(let key in oldProps) { //老的属性有\n    if(!props[key]) { //新的没有则删除属性\n      el.removeAttribute(key)\n    }\n  }\n\n  for(let key in props) { //用新的覆盖掉老的\n    if(key === 'style') {\n      for(let styleName in props.style) {\n        el.style[styleName] = props.style[styleName];\n      }\n    } else {\n      el.setAttribute(key, props[key])\n    }\n  }\n}\n\nexport function patch(oldVNode, vnode) {\n  const isRealElement = oldVNode.nodeType;\n  if (isRealElement) {\n    const elm = oldVNode; //获取真实元素\n\n    const parentElm = elm.parentNode; //拿到父元素\n    let newElm = createElm(vnode);\n    // console.log(newElm);\n    parentElm.insertBefore(newElm, elm.nextSibling); //找到老节点将新生成的插入到他后面\n    parentElm.removeChild(elm); //删除节点\n\n    return newElm\n\n  } else {\n    // diff算法\n    // 1.两个节点不是同一个节点，直接删除老的换上新的 （没有比对了）\n    // 2.两个节点是同一个节点（判断节点的tag和节点的key） 比较两个节点的属性是否有差异（复用老的节点，将差异的属性更新）\n    return patchVNode(oldVNode, vnode)\n  }\n}\nfunction patchVNode(oldVNode, vnode) {\n\n  let el = vnode.el = oldVNode.el //复用老节点的元素\n  if(!isSameVnode(oldVNode, vnode)) {\n    // 用老节点进行替换\n    let el = createElm(vnode)\n    oldVNode.el.parentNode.replaceChild(el ,oldVNode.el)\n    return el\n  }\n  // 文本的情况，文本我们要比较下文本的内容\n  if(!oldVNode.tag) { // 文本\n    if(!oldVNode.text !== vnode.text) {\n      el.textContent = vnode.text; //用新的文本覆盖掉老的\n    }\n  }\n  // 是标签， 我们比较标签的属性\n  patchProps(el, oldVNode.data, vnode.data)\n\n  // 比较子节点 比较的时候 一方有儿子 一方没有儿子\n  // 两方都有儿子\n  let oldChildren = oldVNode.children || []\n  let newChildren = vnode.child || []\n  console.log(oldChildren, newChildren);\n  if(oldChildren.length > 0 && newChildren.length > 0) {\n    // 需要完整diff算法\n    updateChildren(el, oldChildren, newChildren)\n  } else if (newChildren.length > 0) { //没有老的有新的\n    mountChildren(el, newChildren)\n  } else if (oldChildren.length > 0) { //新的没有老的有要删除\n    // el.innerHTML = ''\n    unmountChildren(el, oldChildren)\n  }\n\n\n  // console.log(oldChildren, newChildren);\n  return el\n}\n\nfunction mountChildren(el, newChildren) {\n  for(let i = 0; i<newChildren.length; i++) {\n    let child = newChildren[i]\n    el.appendChild(createElm(child))\n  }\n}\nfunction unmountChildren(el, children) {\n  children.forEach((child) => removeChild(el, child.el));\n}\nfunction updateChildren(el, oldChildren, newChildren) {\n  // 我们操作列表经常会是有 push shift pop unshift reverse sort这些方法（针对这些情况做一个优化） \n  // vue2中采用双指针的方式 比较两个节点\n  let oldStartIndex = 0;\n  let newStartIndex = 0;\n  let oldEndIndex = oldChildren.length - 1;\n  let newEndIndex = newChildren.length - 1;\n\n  let oldStartVnode = oldChildren[0];\n  let newStartVnode = newChildren[0];\n\n  let oldEndVnode = oldChildren[oldEndIndex];\n  let newEndVnode = newChildren[newEndIndex];\n\n  while(oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) { //有一个不满足就停止\n    // 双方有一方指针，大于尾部指针则停止循环\n  }\n\n  console.log(oldStartVnode, newStartVnode, oldEndVnode, newEndVnode);\n}\n","import Watcher from \"./observe/watcher\";\nimport { createElementVNode, createTextVNode } from \"./vdom\";\nimport { patch } from \"./vdom/patch\";\n\n\n\nexport function initLifeCycle(Vue) {\n  // 将vnode转化成真实dom\n  Vue.prototype._update = function (vnode) {\n    const vm = this;\n    const el = vm.$el\n    // console.log(vnode, el);\n    // patch既有初始化的功能，又有更新的功能\n    vm.$el = patch(el, vnode);\n  }\n  // _c('div',{}, ...children)\n  Vue.prototype._c = function () {\n    return createElementVNode(this, ...arguments)\n  }\n  // _v(text)\n  Vue.prototype._v = function () {\n    return createTextVNode(this, ...arguments)\n  }\n  Vue.prototype._s = function (value) {\n    if (typeof value !== 'object') return value\n    return JSON.stringify(value)\n  }\n  // 渲染虚拟dom\n  Vue.prototype._render = function () {\n    const vm = this\n    // console.log(vm.name);\n    // 让with中的this指向vm\n    // 当渲染的时候回去实例取值，我们可以将属性和视图绑定在一起\n    return vm.$options.render.call(vm); // vm是通过ast语法转义生成的render方法\n  }\n}\n\nexport function mountComponent(vm, el) { //这里的el是通过querySelect处理过的\n  vm.$el = el\n  // 1. 调用render方法产生虚拟节点 虚拟dom\n  const updateComponent = () => {\n  vm._update(vm._render()); //vm.$options.render() 返回的是虚拟节点\n\n  }\n  const watcher = new Watcher(vm, updateComponent, true) // true用来表示是个渲染watcher\n  // console.log(watcher);\n  // 2. 根据虚拟dom产生真实dom\n  // 3. 插入到el元素\n\n}\n\n// vue核心流程 \n// 1）创建了响应式数据  2）模板转换成ast语法树\n// 3） 将ast语法树转换成render函数  4）后续每次数据更新就可以只执行render函数（无需再次执行ast转化成的过程）\n\n\n\n// render函数会去产生虚拟节点 （使用响应式数据)\n// 根据生成的虚拟节点创造真实的dom\n\nexport function callHook(vm, hook) {\n  const handlers = vm.$options[hook]\n  if(handlers) {\n    handlers.forEach(handler => handler.call(vm))\n  }\n\n}\n","// 重写数租中的部分方法\n\n\nlet oldArrayProto = Array.prototype; //获取数组中的原型\n\nexport let newArrayProto = Object.create(oldArrayProto);\n\nlet methods = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'reverse',\n  'sort'\n]\n\nmethods.forEach(method => { \n  newArrayProto[method] = function (...args) { // 重写数组的方法\n    const result = oldArrayProto[method].call(this, ...args) //内部调用原来的方法， 函数的劫持\n\n    let inserted;\n    let ob = this.__ob__\n    switch(method) {\n      case 'push':\n      case 'unshift':\n        inserted = args\n        break;\n      case 'splice': \n        inserted = args.slice(2);\n      default:\n        break\n      }\n      // console.log(inserted); //新增的内容\n      if (inserted) {\n        // 对新传递过来的值进行观测\n        ob.observeArray(inserted)\n      }\n      // console.log('更新');\n      ob.dep.notify(); //数组变化了通知对应的watcher走更新逻辑\n    return result\n  }\n})\n","import { newArrayProto } from \"./array\"\nimport Dep from \"./dep\"\n\nclass Observer{\n  constructor(data) {\n    // Object.defineProperty只能劫持已经存在的属性(vm里面会单独为此写一些api  $set $delete)\n\n    // 给每个对象都增加收集功能\n    this.dep = new Dep()\n\n    // data.__ob__ = this\n    Object.defineProperty(data, \"__ob__\", { //给对象添加个标识___ob___，判断是否被观测过\n      value: this,\n      enumerable: false //不可枚举\n    })\n    // 判断是否是数组   \n    if (Array.isArray(data)) {\n      // 重写数组中的方法，可以修改数组本身的7个变异方法\n      data.__proto__ = newArrayProto //保留数组原有特性，并重写部分方法\n      this.observeArray(data) // 观测数组\n    } else {\n      this.walk(data)\n    }\n  }\n\n  walk(data) { //循环对象 对属性进行劫持\n    // 重新定义属性  性能差\n    Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\n  }\n  observeArray(data) {\n    data.forEach(item => observe(item)) //检测数组中的对象\n  }\n}\n// 深层次嵌套会递归  递归多了性能差，不存在属性监控不到，存在的属性要重写方法\nfunction dependArray(value) {\n  for(let i = 0; i < value.length; i++) {\n    let current = value[i]\n    current.__ob__ && current.__ob__.dep.depend()\n    if(Array.isArray(current)) {\n      dependArray(current)\n    }\n  }\n}\nexport function defineReactive(target, key, value) {\n  let childOb = observe(value) //对所有对象进行属性劫持  childOb.dep就是用来收集依赖的\n  let dep = new Dep(); // 让每个属性都有一个dep\n  Object.defineProperty(target, key, {\n    get() {\n      if(Dep.target) {\n        dep.depend(); //这个属性收集器dep记住当前的watcher\n        if(childOb) {\n          childOb.dep.depend() //让数组和对象本身也进行依赖收集\n          if(Array.isArray(value)) {\n            dependArray(value)\n          }\n        }\n      }\n      return value\n    },\n    set(newValue) {\n      if(newValue === value) return\n      observe(newValue)\n      value = newValue\n      dep.notify();\n    }\n  })\n}\n\nexport function observe(data) {\n    // console.log(data);\n    // 对对象进行数据劫持\n    if (typeof data !== 'object' || data == null) {\n      return // 只对对象进行劫持\n    }\n    if (data.__ob__ instanceof Observer) { //说明这个对象被代理过看\n      return data.__ob__\n    }\n    // 判断对象是否被劫持 （添加一个实例，用实例判断是否被劫持过）\n    return new Observer(data)\n}\n","import Dep from \"./observe/dep\"\nimport { observe } from \"./observe/index\"\nimport Watcher, { nextTick } from './observe/watcher'\n\nexport function initState(vm) {\n  // 数据劫持\n  const opts = vm.$options //获取所有的选项\n  if (opts.data) { //有数据初始化数据\n    initData(vm)\n  }\n  if (opts.computed) {\n    initComputed(vm)\n  }\n  if (opts.watch) {\n    initWatch(vm)\n  }\n}\nfunction initWatch(vm) {\n  let watch = vm.$options.watch;\n  for(let key in watch) {\n    const handler = watch[key]\n\n    if(Array.isArray(handler)) {\n      for(let i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i])\n      }\n    } else {\n      createWatcher(vm, key, handler)\n    }\n  }\n}\nfunction createWatcher(vm, key, handler) {\n  if(typeof handler === 'string') {\n    handler = vm[handler]\n  }\n  return vm.$watch(key, handler)\n}\n\n\nfunction proxy(vm, target, key) {\n  Object.defineProperty(vm, key, {\n    get() {\n      return vm[target][key]\n    },\n    set(newValue) {\n      vm[target][key] = newValue\n    }\n  })\n}\nfunction initData(vm) {\n  let data = vm.$options.data //data可能是函数和对象\n  data = typeof data === 'function'? data.call(vm) : data\n  \n  vm._data = data //将返回的对象放到_data上\n  // 对数据进行数据劫持\n  observe(data)\n\n  // 将vm._data 用vm代理\n  for(let key in data) {\n    proxy(vm,'_data', key)\n  }\n\n}\nfunction initComputed(vm) {\n  const computed = vm.$options.computed\n  let watchers = vm._computedWatchers = {} //将计算属性watcher保存到vm上\n  for(let key in computed) {\n    let userDef = computed[key]\n    // 我们需要监控计算属性中get的变化\n    let fn = typeof userDef === 'function' ? userDef : userDef.get\n    // 默认直接new watcher时候会立即执行fn  将属性和watcher对应起来\n    watchers[key] = new Watcher(vm, fn, {lazy: true})\n\n\n\n\n    defineComputed(vm, key, userDef)\n  }\n}\nfunction defineComputed(target, key, userDef) {\n  // console.log(target, key, userDef);\n  const getter = typeof userDef === 'function' ? userDef : userDef.get\n  const setter = userDef.set || (() => {})\n  // 通过实例获取到对应属性\n  Object.defineProperty(target, key, {\n    get: createComputedGetter(key),\n    set: setter\n  })\n}\n// 计算属性不会收集依赖，只会让自己的依赖属性去收集依赖\nfunction createComputedGetter(key) {\n  // 检查是否要执行这个getter\n  return function() {\n    const watcher = this._computedWatchers[key]; //获取到对应属性的watcher\n    if(watcher.dirty) {\n      // 如果是脏就去执行用户传入的函数\n      watcher.evaluate() //求值后 dirty变为false 下次就不求值了\n    }\n    if(Dep.target) { // 计算属性出栈后 还有渲染watcher，应该让计算属性watcher里面的属性 也去收集上一层watcher\n      watcher.depend()\n    }\n    return watcher.value // 最后返回的是watcher上的值\n  }\n}\nexport function initStateMixin(Vue) {\n  Vue.prototype.$nextTick = nextTick\n  // 最终调用的都是这个方法\n  Vue.prototype.$watch = function(expOrFn, cb, options = {}) {\n  new Watcher(this, expOrFn, {user: true}, cb)\n}\n\n}\n","import compileToFunction from \"./compiler\";\nimport { mountComponent, callHook } from \"./lifecycle\";\nimport { initState } from \"./state\";\nimport { mergeOptions } from \"./utils\";\n\nexport function initMixin(Vue) {\n  Vue.prototype._init = function(options) { // 初始化操作\n    // vue 自己的属性\n    const vm = this\n    // 我们定义的全局指令和过滤器都会挂载到实例上\n    this.$options = mergeOptions(this.constructor.options ,options); //将用户的选项挂载到实例上\n\n    callHook(vm, 'beforeCreate')\n    // 初始化状态 初始化计算属性\n    initState(vm)\n    callHook(vm, 'created')\n    if (options.el) {\n      vm.$mount(options.el); //实现数据的挂载\n    }\n  }\n  Vue.prototype.$mount = function(el) {\n    const vm = this;\n    el = document.querySelector(el)\n    let ops = vm.$options\n    if(!ops.render) { // 先进行查找有没有render函数\n      let template; // 没有render看一下是否有template，没有就才用外部的template\n      if(!ops.template && el) { // 没有模板但是有el\n        template = el.outerHTML\n      } else {\n        if(el) {\n          template = ops.template; // 有el，就才用模板中的内容\n        }\n      }\n      // 有template就用template\n      if(template) {\n        const render = compileToFunction(template);\n        ops.render = render;\n      }\n    }\n\n    mountComponent(vm, el); // 组件的挂载\n    // console.log(ops.render); // 获取render方法\n    // script 标签引用的vue.global.js，这个编译过程是在浏览器运行的\n    // runtime是不包含模板编译的，整个编译是打包的时候通过loader来转义.vue文件的，用runtime的时候不能使用template\n  }\n}\n\n","import compileToFunction from \"./compiler\";\nimport { initGlobalAPI } from \"./globalApi\";\nimport { initMixin } from \"./init\"\nimport { initLifeCycle } from \"./lifecycle\";\n// import Watcher,  from \"./observe/watcher\";\nimport { initStateMixin } from \"./state\";\nimport { createElm, patch } from \"./vdom/patch\";\n\nfunction Vue(options) { // options就是用户的选项\n  this._init(options) // 默认调用了init\n}\n\ninitMixin(Vue); //扩展init方法\ninitLifeCycle(Vue); //vm._update vm._render\ninitGlobalAPI(Vue); //实现全局api\ninitStateMixin(Vue); //实现了nextTick、$watch\n\n\n// 测试\nlet render1 = compileToFunction(`<ul key=\"a\" style=\"color: red\">\n  <li key='a'>a</li>\n  <li key='b'>b</li>\n  <li key='c'>c</li>\n</ul>`)\nlet vm = new Vue({data:{name: 'zs'}})\nlet prevNode = render1.call(vm)\n\nlet el = createElm(prevNode)\ndocument.body.appendChild(el)\n\nlet render2 = compileToFunction(`<ul key=\"b\" style=\"color: #000;background: #bfc\">\n  <li key='a'>a</li>\n  <li key='b'>b</li>\n  <li key='c'>c</li>\n  <li key='d'>d</li>\n</ul>`)\nlet vm2 = new Vue({data:{name: '王五'}})\nlet nextNode = render2.call(vm2)\n// console.log(prevNode, nextNode);\n// 直接将新的节点替换掉了老的，不是直接替换，而是比较两个人的区别之后在替换，diff算法\n// diff算法是一个平级比较的过程 父亲和父亲比 儿子和儿子比\nsetTimeout(() => {\n  patch(prevNode, nextNode)\n  // let newEl = createElm(nextNode)\n  // el.parentNode.replaceChild(newEl, el)\n}, 1000)\n\n\nexport default Vue\n"],"names":["ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","i","obj","split","forEach","item","key","JSON","stringify","slice","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","child","ast","code","compileToFunction","template","render","Function","strats","LIFECYCLE","hook","p","c","concat","mergeOptions","options","mergeField","hasOwnProperty","initGlobalAPI","Vue","mixin","id","Dep","subs","target","addDep","watcher","update","pushTarget","popTarget","Watcher","vm","expOrfn","cb","renderWatcher","getter","deps","depsId","Set","lazy","dirty","user","undefined","get","dep","has","add","addSub","call","depend","queueWatcher","oldValue","newValue","queue","pending","flushSchedulerQueue","flushQueue","q","run","nextTick","callbacks","waiting","flushCallbacks","cbs","timerFunc","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","observe","characterData","textContent","setImmediate","setTimeout","createElementVNode","data","vnode","createTextVNode","isSameVnode","vnode1","vnode2","createElm","el","createElement","patchProps","appendChild","oldProps","props","oldStyles","style","newStyles","removeAttribute","styleName","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","patchVNode","replaceChild","oldChildren","newChildren","console","log","updateChildren","mountChildren","unmountChildren","oldEndIndex","newEndIndex","oldStartVnode","newStartVnode","oldEndVnode","newEndVnode","initLifeCycle","prototype","_update","$el","_c","arguments","_v","_s","_render","$options","mountComponent","updateComponent","callHook","handlers","handler","oldArrayProto","Array","newArrayProto","Object","create","methods","method","args","result","inserted","ob","__ob__","observeArray","notify","Observer","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","dependArray","current","childOb","set","initState","opts","initData","computed","initComputed","watch","initWatch","createWatcher","$watch","proxy","_data","watchers","_computedWatchers","userDef","fn","defineComputed","setter","createComputedGetter","evaluate","initStateMixin","$nextTick","expOrFn","initMixin","_init","constructor","$mount","querySelector","ops","outerHTML","render1","prevNode","body","render2","vm2","nextNode"],"mappings":"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"}